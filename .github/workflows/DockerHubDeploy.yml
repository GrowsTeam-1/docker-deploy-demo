name: DockerHub deploy

on:
  workflow_dispatch:

  workflow_run:
    workflows: [ "CI/CD Pipeline" ]
    types:
      - completed
# Environment variables available to all jobs and steps in this workflow
env:
  SPRING_BOOT_IMAGE_NAME: docker-deploy-demo
  SPRING_BOOT_CONTAINER_NAME: spring-boot-deployment-container
  SPRING_BOOT_DEPLOYMENT_NAME: spring-boot-deployment-container
  MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}

jobs:
  build:
    name: Build, push, and deploy
    env:
      MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}
    runs-on: ubuntu-latest
    steps:
      #Check-out your repository under $GITHUB_WORKSPACE, so your workflow can access it

      - name: Checkout main
        env:
          MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}
        uses: actions/checkout@v2

      #Set up JDK 11
      - name: Set up JDK
        env:
          MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}
        uses: actions/setup-java@v1
        with:
          java-version: '11'
      #Set up Maven cache
      - name: Cache Maven packages
        env:
          MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}
        #This action allows caching dependencies and build outputs to improve workflow execution time.
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      #Build the application using Maven
      - name: Build with Maven
        env:
          MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}
        run: mvn -B package -DskipTests --file pom.xml

      - name: Print SECRET
        env:
          MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}
        if: env.MY_SECRET_VALUE == 'MY_SECRET_VALUE'
        run: echo 'I know your secret'



      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Provide permission to run mvnw
        env:
          MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}
        run: chmod +x ./mvnw

      - name: Set up Docker Buildx
        env:
          MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push Spring Boot Image
        env:
          MY_SECRET_VALUE: ${{ secrets.MY_SECRET_VALUE }}
        id: docker-deploy-demo_build
        uses: docker/build-push-action@v2

        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags:  ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.SPRING_BOOT_IMAGE_NAME }}:${{ github.sha }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


